// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: server.proto

package marsproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Acknowledge_AckType int32

const (
	Acknowledge_NoAckType Acknowledge_AckType = 0
	Acknowledge_Accepted  Acknowledge_AckType = 1
	Acknowledge_Retry     Acknowledge_AckType = 2
	Acknowledge_Rejected  Acknowledge_AckType = 3
)

// Enum value maps for Acknowledge_AckType.
var (
	Acknowledge_AckType_name = map[int32]string{
		0: "NoAckType",
		1: "Accepted",
		2: "Retry",
		3: "Rejected",
	}
	Acknowledge_AckType_value = map[string]int32{
		"NoAckType": 0,
		"Accepted":  1,
		"Retry":     2,
		"Rejected":  3,
	}
)

func (x Acknowledge_AckType) Enum() *Acknowledge_AckType {
	p := new(Acknowledge_AckType)
	*p = x
	return p
}

func (x Acknowledge_AckType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Acknowledge_AckType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[0].Descriptor()
}

func (Acknowledge_AckType) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[0]
}

func (x Acknowledge_AckType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Acknowledge_AckType.Descriptor instead.
func (Acknowledge_AckType) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1, 0}
}

type Announce_Resource int32

const (
	Announce_NO_ACTION         Announce_Resource = 0
	Announce_START_GAME        Announce_Resource = 1
	Announce_ADD_CARD_OPPONENT Announce_Resource = 2
	Announce_ADD_CARD_SELF     Announce_Resource = 3
	Announce_SHUFFLE_DECK      Announce_Resource = 4
	Announce_SEEK_CARD         Announce_Resource = 5
	Announce_APPLY_CORPORATION Announce_Resource = 6
	Announce_DISCARD_CARD      Announce_Resource = 7
	Announce_ADD_RESOURCE      Announce_Resource = 8
	Announce_RUN_ACTIVATABLE   Announce_Resource = 9
	Announce_PROCEED_TURN      Announce_Resource = 10
	Announce_CARD_BUY_PHASE    Announce_Resource = 11
	Announce_GENERATION_BEGIN  Announce_Resource = 12
	Announce_GENERATION_END    Announce_Resource = 13
	Announce_PLAY_CARD         Announce_Resource = 14
	Announce_RUN_BASIC_PROJECT Announce_Resource = 15
	Announce_ADD_PRODUCTION    Announce_Resource = 16
)

// Enum value maps for Announce_Resource.
var (
	Announce_Resource_name = map[int32]string{
		0:  "NO_ACTION",
		1:  "START_GAME",
		2:  "ADD_CARD_OPPONENT",
		3:  "ADD_CARD_SELF",
		4:  "SHUFFLE_DECK",
		5:  "SEEK_CARD",
		6:  "APPLY_CORPORATION",
		7:  "DISCARD_CARD",
		8:  "ADD_RESOURCE",
		9:  "RUN_ACTIVATABLE",
		10: "PROCEED_TURN",
		11: "CARD_BUY_PHASE",
		12: "GENERATION_BEGIN",
		13: "GENERATION_END",
		14: "PLAY_CARD",
		15: "RUN_BASIC_PROJECT",
		16: "ADD_PRODUCTION",
	}
	Announce_Resource_value = map[string]int32{
		"NO_ACTION":         0,
		"START_GAME":        1,
		"ADD_CARD_OPPONENT": 2,
		"ADD_CARD_SELF":     3,
		"SHUFFLE_DECK":      4,
		"SEEK_CARD":         5,
		"APPLY_CORPORATION": 6,
		"DISCARD_CARD":      7,
		"ADD_RESOURCE":      8,
		"RUN_ACTIVATABLE":   9,
		"PROCEED_TURN":      10,
		"CARD_BUY_PHASE":    11,
		"GENERATION_BEGIN":  12,
		"GENERATION_END":    13,
		"PLAY_CARD":         14,
		"RUN_BASIC_PROJECT": 15,
		"ADD_PRODUCTION":    16,
	}
)

func (x Announce_Resource) Enum() *Announce_Resource {
	p := new(Announce_Resource)
	*p = x
	return p
}

func (x Announce_Resource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Announce_Resource) Descriptor() protoreflect.EnumDescriptor {
	return file_server_proto_enumTypes[1].Descriptor()
}

func (Announce_Resource) Type() protoreflect.EnumType {
	return &file_server_proto_enumTypes[1]
}

func (x Announce_Resource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Announce_Resource.Descriptor instead.
func (Announce_Resource) EnumDescriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4, 0}
}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*ServerMessage_Ack
	//	*ServerMessage_Request
	//	*ServerMessage_Announce
	Data isServerMessage_Data `protobuf_oneof:"data"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (m *ServerMessage) GetData() isServerMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *ServerMessage) GetAck() *Acknowledge {
	if x, ok := x.GetData().(*ServerMessage_Ack); ok {
		return x.Ack
	}
	return nil
}

func (x *ServerMessage) GetRequest() *ActionRequest {
	if x, ok := x.GetData().(*ServerMessage_Request); ok {
		return x.Request
	}
	return nil
}

func (x *ServerMessage) GetAnnounce() *Announce {
	if x, ok := x.GetData().(*ServerMessage_Announce); ok {
		return x.Announce
	}
	return nil
}

type isServerMessage_Data interface {
	isServerMessage_Data()
}

type ServerMessage_Ack struct {
	Ack *Acknowledge `protobuf:"bytes,100,opt,name=ack,proto3,oneof"`
}

type ServerMessage_Request struct {
	Request *ActionRequest `protobuf:"bytes,101,opt,name=request,proto3,oneof"`
}

type ServerMessage_Announce struct {
	Announce *Announce `protobuf:"bytes,102,opt,name=announce,proto3,oneof"`
}

func (*ServerMessage_Ack) isServerMessage_Data() {}

func (*ServerMessage_Request) isServerMessage_Data() {}

func (*ServerMessage_Announce) isServerMessage_Data() {}

type Acknowledge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Player int64               `protobuf:"varint,2,opt,name=player,proto3" json:"player,omitempty"`
	Ack    Acknowledge_AckType `protobuf:"varint,100,opt,name=ack,proto3,enum=marsproto.Acknowledge_AckType" json:"ack,omitempty"`
	Params map[string]string   `protobuf:"bytes,101,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Acknowledge) Reset() {
	*x = Acknowledge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Acknowledge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Acknowledge) ProtoMessage() {}

func (x *Acknowledge) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Acknowledge.ProtoReflect.Descriptor instead.
func (*Acknowledge) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *Acknowledge) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Acknowledge) GetPlayer() int64 {
	if x != nil {
		return x.Player
	}
	return 0
}

func (x *Acknowledge) GetAck() Acknowledge_AckType {
	if x != nil {
		return x.Ack
	}
	return Acknowledge_NoAckType
}

func (x *Acknowledge) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type ActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Player int64 `protobuf:"varint,2,opt,name=player,proto3" json:"player,omitempty"`
	// Types that are assignable to Message:
	//	*ActionRequest_SelectCorporation
	//	*ActionRequest_ShopCard
	//	*ActionRequest_DoAction
	Message isActionRequest_Message `protobuf_oneof:"message"`
}

func (x *ActionRequest) Reset() {
	*x = ActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionRequest) ProtoMessage() {}

func (x *ActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionRequest.ProtoReflect.Descriptor instead.
func (*ActionRequest) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *ActionRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActionRequest) GetPlayer() int64 {
	if x != nil {
		return x.Player
	}
	return 0
}

func (m *ActionRequest) GetMessage() isActionRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ActionRequest) GetSelectCorporation() *SelectCorporation {
	if x, ok := x.GetMessage().(*ActionRequest_SelectCorporation); ok {
		return x.SelectCorporation
	}
	return nil
}

func (x *ActionRequest) GetShopCard() *ShopCard {
	if x, ok := x.GetMessage().(*ActionRequest_ShopCard); ok {
		return x.ShopCard
	}
	return nil
}

func (x *ActionRequest) GetDoAction() *DoAction {
	if x, ok := x.GetMessage().(*ActionRequest_DoAction); ok {
		return x.DoAction
	}
	return nil
}

type isActionRequest_Message interface {
	isActionRequest_Message()
}

type ActionRequest_SelectCorporation struct {
	SelectCorporation *SelectCorporation `protobuf:"bytes,100,opt,name=select_corporation,json=selectCorporation,proto3,oneof"`
}

type ActionRequest_ShopCard struct {
	ShopCard *ShopCard `protobuf:"bytes,101,opt,name=shop_card,json=shopCard,proto3,oneof"`
}

type ActionRequest_DoAction struct {
	DoAction *DoAction `protobuf:"bytes,102,opt,name=do_action,json=doAction,proto3,oneof"`
}

func (*ActionRequest_SelectCorporation) isActionRequest_Message() {}

func (*ActionRequest_ShopCard) isActionRequest_Message() {}

func (*ActionRequest_DoAction) isActionRequest_Message() {}

type ReadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Player        int64                  `protobuf:"varint,2,opt,name=player,proto3" json:"player,omitempty"`
	NumPlayer     int32                  `protobuf:"varint,3,opt,name=num_player,json=numPlayer,proto3" json:"num_player,omitempty"`
	DiscardedDeck int32                  `protobuf:"varint,4,opt,name=discarded_deck,json=discardedDeck,proto3" json:"discarded_deck,omitempty"`
	DrawDeck      int32                  `protobuf:"varint,5,opt,name=draw_deck,json=drawDeck,proto3" json:"draw_deck,omitempty"`
	Generation    int32                  `protobuf:"varint,6,opt,name=generation,proto3" json:"generation,omitempty"`
	Players       []*ReadResponse_Player `protobuf:"bytes,100,rep,name=players,proto3" json:"players,omitempty"`
}

func (x *ReadResponse) Reset() {
	*x = ReadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse) ProtoMessage() {}

func (x *ReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse.ProtoReflect.Descriptor instead.
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *ReadResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadResponse) GetPlayer() int64 {
	if x != nil {
		return x.Player
	}
	return 0
}

func (x *ReadResponse) GetNumPlayer() int32 {
	if x != nil {
		return x.NumPlayer
	}
	return 0
}

func (x *ReadResponse) GetDiscardedDeck() int32 {
	if x != nil {
		return x.DiscardedDeck
	}
	return 0
}

func (x *ReadResponse) GetDrawDeck() int32 {
	if x != nil {
		return x.DrawDeck
	}
	return 0
}

func (x *ReadResponse) GetGeneration() int32 {
	if x != nil {
		return x.Generation
	}
	return 0
}

func (x *ReadResponse) GetPlayers() []*ReadResponse_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type Announce struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Target   int64             `protobuf:"varint,2,opt,name=target,proto3" json:"target,omitempty"`
	Resource Announce_Resource `protobuf:"varint,3,opt,name=resource,proto3,enum=marsproto.Announce_Resource" json:"resource,omitempty"`
	Params   map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Announce) Reset() {
	*x = Announce{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Announce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Announce) ProtoMessage() {}

func (x *Announce) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Announce.ProtoReflect.Descriptor instead.
func (*Announce) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{4}
}

func (x *Announce) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Announce) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Announce) GetResource() Announce_Resource {
	if x != nil {
		return x.Resource
	}
	return Announce_NO_ACTION
}

func (x *Announce) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type ReadResponse_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Corporation       *Card   `protobuf:"bytes,2,opt,name=corporation,proto3" json:"corporation,omitempty"`
	Resources         []int32 `protobuf:"varint,3,rep,packed,name=resources,proto3" json:"resources,omitempty"`
	Production        []int32 `protobuf:"varint,4,rep,packed,name=production,proto3" json:"production,omitempty"`
	Hand              []*Card `protobuf:"bytes,5,rep,name=hand,proto3" json:"hand,omitempty"`
	Played            []*Card `protobuf:"bytes,6,rep,name=played,proto3" json:"played,omitempty"`
	HandCount         int32   `protobuf:"varint,7,opt,name=hand_count,json=handCount,proto3" json:"hand_count,omitempty"`
	Tags              []int32 `protobuf:"varint,8,rep,packed,name=tags,proto3" json:"tags,omitempty"`
	TerraformingLevel int32   `protobuf:"varint,9,opt,name=terraforming_level,json=terraformingLevel,proto3" json:"terraforming_level,omitempty"`
}

func (x *ReadResponse_Player) Reset() {
	*x = ReadResponse_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadResponse_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadResponse_Player) ProtoMessage() {}

func (x *ReadResponse_Player) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadResponse_Player.ProtoReflect.Descriptor instead.
func (*ReadResponse_Player) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ReadResponse_Player) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadResponse_Player) GetCorporation() *Card {
	if x != nil {
		return x.Corporation
	}
	return nil
}

func (x *ReadResponse_Player) GetResources() []int32 {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *ReadResponse_Player) GetProduction() []int32 {
	if x != nil {
		return x.Production
	}
	return nil
}

func (x *ReadResponse_Player) GetHand() []*Card {
	if x != nil {
		return x.Hand
	}
	return nil
}

func (x *ReadResponse_Player) GetPlayed() []*Card {
	if x != nil {
		return x.Played
	}
	return nil
}

func (x *ReadResponse_Player) GetHandCount() int32 {
	if x != nil {
		return x.HandCount
	}
	return 0
}

func (x *ReadResponse_Player) GetTags() []int32 {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReadResponse_Player) GetTerraformingLevel() int32 {
	if x != nil {
		return x.TerraformingLevel
	}
	return 0
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01, 0x0a,
	0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2a,
	0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x61,
	0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x61,
	0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x31, 0x0a, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x18, 0x66, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x61, 0x6e, 0x6e, 0x6f, 0x75,
	0x6e, 0x63, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x9f, 0x02, 0x0a, 0x0b,
	0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x03, 0x61, 0x63, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x6b,
	0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x03, 0x61, 0x63, 0x6b, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x07,
	0x41, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x6f, 0x41, 0x63, 0x6b,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x65, 0x64, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x65, 0x74, 0x72, 0x79, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x65, 0x64, 0x10, 0x03, 0x22, 0xf9, 0x01,
	0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x4d, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x64, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x72, 0x70, 0x6f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x61, 0x72, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00,
	0x52, 0x08, 0x73, 0x68, 0x6f, 0x70, 0x43, 0x61, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x64, 0x6f,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x64, 0x6f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xaf, 0x04, 0x0a, 0x0c, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x75, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x64,
	0x65, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x61,
	0x72, 0x64, 0x65, 0x64, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x64, 0x65, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x72, 0x61,
	0x77, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x64, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x1a,
	0xb9, 0x02, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x6f,
	0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x0b, 0x63, 0x6f, 0x72, 0x70, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x68,
	0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x72, 0x73,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x04, 0x68, 0x61, 0x6e, 0x64,
	0x12, 0x27, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x61, 0x72,
	0x64, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x6e,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x61, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x12,
	0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66,
	0x6f, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xb1, 0x04, 0x0a, 0x08,
	0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x38, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41,
	0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d, 0x61, 0x72,
	0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x75, 0x6e, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce,
	0x02, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x4e,
	0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54,
	0x41, 0x52, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x44,
	0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x4f, 0x50, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x44, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x53, 0x45,
	0x4c, 0x46, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x48, 0x55, 0x46, 0x46, 0x4c, 0x45, 0x5f,
	0x44, 0x45, 0x43, 0x4b, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x45, 0x45, 0x4b, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x50, 0x50, 0x4c, 0x59, 0x5f, 0x43,
	0x4f, 0x52, 0x50, 0x4f, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12, 0x10, 0x0a, 0x0c,
	0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x07, 0x12, 0x10,
	0x0a, 0x0c, 0x41, 0x44, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x10, 0x08,
	0x12, 0x13, 0x0a, 0x0f, 0x52, 0x55, 0x4e, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x45, 0x44,
	0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x0a, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x41, 0x52, 0x44, 0x5f,
	0x42, 0x55, 0x59, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x10, 0x0b, 0x12, 0x14, 0x0a, 0x10, 0x47,
	0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10,
	0x0c, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x45, 0x4e, 0x44, 0x10, 0x0d, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4c, 0x41, 0x59, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x0e, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x55, 0x4e, 0x5f, 0x42, 0x41, 0x53, 0x49,
	0x43, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x0f, 0x12, 0x12, 0x0a, 0x0e, 0x41,
	0x44, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x10, 0x42,
	0x0d, 0x5a, 0x0b, 0x2e, 0x3b, 0x6d, 0x61, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_server_proto_goTypes = []interface{}{
	(Acknowledge_AckType)(0),    // 0: marsproto.Acknowledge.AckType
	(Announce_Resource)(0),      // 1: marsproto.Announce.Resource
	(*ServerMessage)(nil),       // 2: marsproto.ServerMessage
	(*Acknowledge)(nil),         // 3: marsproto.Acknowledge
	(*ActionRequest)(nil),       // 4: marsproto.ActionRequest
	(*ReadResponse)(nil),        // 5: marsproto.ReadResponse
	(*Announce)(nil),            // 6: marsproto.Announce
	nil,                         // 7: marsproto.Acknowledge.ParamsEntry
	(*ReadResponse_Player)(nil), // 8: marsproto.ReadResponse.Player
	nil,                         // 9: marsproto.Announce.ParamsEntry
	(*SelectCorporation)(nil),   // 10: marsproto.SelectCorporation
	(*ShopCard)(nil),            // 11: marsproto.ShopCard
	(*DoAction)(nil),            // 12: marsproto.DoAction
	(*Card)(nil),                // 13: marsproto.Card
}
var file_server_proto_depIdxs = []int32{
	3,  // 0: marsproto.ServerMessage.ack:type_name -> marsproto.Acknowledge
	4,  // 1: marsproto.ServerMessage.request:type_name -> marsproto.ActionRequest
	6,  // 2: marsproto.ServerMessage.announce:type_name -> marsproto.Announce
	0,  // 3: marsproto.Acknowledge.ack:type_name -> marsproto.Acknowledge.AckType
	7,  // 4: marsproto.Acknowledge.params:type_name -> marsproto.Acknowledge.ParamsEntry
	10, // 5: marsproto.ActionRequest.select_corporation:type_name -> marsproto.SelectCorporation
	11, // 6: marsproto.ActionRequest.shop_card:type_name -> marsproto.ShopCard
	12, // 7: marsproto.ActionRequest.do_action:type_name -> marsproto.DoAction
	8,  // 8: marsproto.ReadResponse.players:type_name -> marsproto.ReadResponse.Player
	1,  // 9: marsproto.Announce.resource:type_name -> marsproto.Announce.Resource
	9,  // 10: marsproto.Announce.params:type_name -> marsproto.Announce.ParamsEntry
	13, // 11: marsproto.ReadResponse.Player.corporation:type_name -> marsproto.Card
	13, // 12: marsproto.ReadResponse.Player.hand:type_name -> marsproto.Card
	13, // 13: marsproto.ReadResponse.Player.played:type_name -> marsproto.Card
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	file_entity_proto_init()
	file_server_action_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Acknowledge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Announce); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadResponse_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_server_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ServerMessage_Ack)(nil),
		(*ServerMessage_Request)(nil),
		(*ServerMessage_Announce)(nil),
	}
	file_server_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*ActionRequest_SelectCorporation)(nil),
		(*ActionRequest_ShopCard)(nil),
		(*ActionRequest_DoAction)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		EnumInfos:         file_server_proto_enumTypes,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}
