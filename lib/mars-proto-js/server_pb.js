/* eslint-disable */
// source: server.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var entity_pb = require('./entity_pb.js');
goog.object.extend(proto, entity_pb);
var server$action_pb = require('./server-action_pb.js');
goog.object.extend(proto, server$action_pb);
goog.exportSymbol('proto.marsproto.Acknowledge', null, global);
goog.exportSymbol('proto.marsproto.Acknowledge.AckType', null, global);
goog.exportSymbol('proto.marsproto.ActionRequest', null, global);
goog.exportSymbol('proto.marsproto.ActionRequest.MessageCase', null, global);
goog.exportSymbol('proto.marsproto.Announce', null, global);
goog.exportSymbol('proto.marsproto.Announce.Resource', null, global);
goog.exportSymbol('proto.marsproto.ReadResponse', null, global);
goog.exportSymbol('proto.marsproto.ReadResponse.Player', null, global);
goog.exportSymbol('proto.marsproto.ServerMessage', null, global);
goog.exportSymbol('proto.marsproto.ServerMessage.DataCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.ServerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.marsproto.ServerMessage.oneofGroups_);
};
goog.inherits(proto.marsproto.ServerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.ServerMessage.displayName = 'proto.marsproto.ServerMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.Acknowledge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.marsproto.Acknowledge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.Acknowledge.displayName = 'proto.marsproto.Acknowledge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.ActionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.marsproto.ActionRequest.oneofGroups_);
};
goog.inherits(proto.marsproto.ActionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.ActionRequest.displayName = 'proto.marsproto.ActionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.ReadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.marsproto.ReadResponse.repeatedFields_, null);
};
goog.inherits(proto.marsproto.ReadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.ReadResponse.displayName = 'proto.marsproto.ReadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.ReadResponse.Player = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.marsproto.ReadResponse.Player.repeatedFields_, null);
};
goog.inherits(proto.marsproto.ReadResponse.Player, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.ReadResponse.Player.displayName = 'proto.marsproto.ReadResponse.Player';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.marsproto.Announce = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.marsproto.Announce, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.marsproto.Announce.displayName = 'proto.marsproto.Announce';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.marsproto.ServerMessage.oneofGroups_ = [[100,101,102]];

/**
 * @enum {number}
 */
proto.marsproto.ServerMessage.DataCase = {
  DATA_NOT_SET: 0,
  ACK: 100,
  REQUEST: 101,
  ANNOUNCE: 102
};

/**
 * @return {proto.marsproto.ServerMessage.DataCase}
 */
proto.marsproto.ServerMessage.prototype.getDataCase = function() {
  return /** @type {proto.marsproto.ServerMessage.DataCase} */(jspb.Message.computeOneofCase(this, proto.marsproto.ServerMessage.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.ServerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.ServerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.ServerMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ServerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    ack: (f = msg.getAck()) && proto.marsproto.Acknowledge.toObject(includeInstance, f),
    request: (f = msg.getRequest()) && proto.marsproto.ActionRequest.toObject(includeInstance, f),
    announce: (f = msg.getAnnounce()) && proto.marsproto.Announce.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.ServerMessage}
 */
proto.marsproto.ServerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.ServerMessage;
  return proto.marsproto.ServerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.ServerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.ServerMessage}
 */
proto.marsproto.ServerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 100:
      var value = new proto.marsproto.Acknowledge;
      reader.readMessage(value,proto.marsproto.Acknowledge.deserializeBinaryFromReader);
      msg.setAck(value);
      break;
    case 101:
      var value = new proto.marsproto.ActionRequest;
      reader.readMessage(value,proto.marsproto.ActionRequest.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    case 102:
      var value = new proto.marsproto.Announce;
      reader.readMessage(value,proto.marsproto.Announce.deserializeBinaryFromReader);
      msg.setAnnounce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.ServerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.ServerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.ServerMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ServerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAck();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      proto.marsproto.Acknowledge.serializeBinaryToWriter
    );
  }
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.marsproto.ActionRequest.serializeBinaryToWriter
    );
  }
  f = message.getAnnounce();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.marsproto.Announce.serializeBinaryToWriter
    );
  }
};


/**
 * optional Acknowledge ack = 100;
 * @return {?proto.marsproto.Acknowledge}
 */
proto.marsproto.ServerMessage.prototype.getAck = function() {
  return /** @type{?proto.marsproto.Acknowledge} */ (
    jspb.Message.getWrapperField(this, proto.marsproto.Acknowledge, 100));
};


/**
 * @param {?proto.marsproto.Acknowledge|undefined} value
 * @return {!proto.marsproto.ServerMessage} returns this
*/
proto.marsproto.ServerMessage.prototype.setAck = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.marsproto.ServerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ServerMessage} returns this
 */
proto.marsproto.ServerMessage.prototype.clearAck = function() {
  return this.setAck(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ServerMessage.prototype.hasAck = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ActionRequest request = 101;
 * @return {?proto.marsproto.ActionRequest}
 */
proto.marsproto.ServerMessage.prototype.getRequest = function() {
  return /** @type{?proto.marsproto.ActionRequest} */ (
    jspb.Message.getWrapperField(this, proto.marsproto.ActionRequest, 101));
};


/**
 * @param {?proto.marsproto.ActionRequest|undefined} value
 * @return {!proto.marsproto.ServerMessage} returns this
*/
proto.marsproto.ServerMessage.prototype.setRequest = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.marsproto.ServerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ServerMessage} returns this
 */
proto.marsproto.ServerMessage.prototype.clearRequest = function() {
  return this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ServerMessage.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional Announce announce = 102;
 * @return {?proto.marsproto.Announce}
 */
proto.marsproto.ServerMessage.prototype.getAnnounce = function() {
  return /** @type{?proto.marsproto.Announce} */ (
    jspb.Message.getWrapperField(this, proto.marsproto.Announce, 102));
};


/**
 * @param {?proto.marsproto.Announce|undefined} value
 * @return {!proto.marsproto.ServerMessage} returns this
*/
proto.marsproto.ServerMessage.prototype.setAnnounce = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.marsproto.ServerMessage.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ServerMessage} returns this
 */
proto.marsproto.ServerMessage.prototype.clearAnnounce = function() {
  return this.setAnnounce(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ServerMessage.prototype.hasAnnounce = function() {
  return jspb.Message.getField(this, 102) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.Acknowledge.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.Acknowledge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.Acknowledge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.Acknowledge.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    player: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ack: jspb.Message.getFieldWithDefault(msg, 100, 0),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.Acknowledge}
 */
proto.marsproto.Acknowledge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.Acknowledge;
  return proto.marsproto.Acknowledge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.Acknowledge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.Acknowledge}
 */
proto.marsproto.Acknowledge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayer(value);
      break;
    case 100:
      var value = /** @type {!proto.marsproto.Acknowledge.AckType} */ (reader.readEnum());
      msg.setAck(value);
      break;
    case 101:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.Acknowledge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.Acknowledge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.Acknowledge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.Acknowledge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getAck();
  if (f !== 0.0) {
    writer.writeEnum(
      100,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(101, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.marsproto.Acknowledge.AckType = {
  NOACKTYPE: 0,
  ACCEPTED: 1,
  RETRY: 2,
  REJECTED: 3
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.marsproto.Acknowledge.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.Acknowledge} returns this
 */
proto.marsproto.Acknowledge.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player = 2;
 * @return {number}
 */
proto.marsproto.Acknowledge.prototype.getPlayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.Acknowledge} returns this
 */
proto.marsproto.Acknowledge.prototype.setPlayer = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional AckType ack = 100;
 * @return {!proto.marsproto.Acknowledge.AckType}
 */
proto.marsproto.Acknowledge.prototype.getAck = function() {
  return /** @type {!proto.marsproto.Acknowledge.AckType} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {!proto.marsproto.Acknowledge.AckType} value
 * @return {!proto.marsproto.Acknowledge} returns this
 */
proto.marsproto.Acknowledge.prototype.setAck = function(value) {
  return jspb.Message.setProto3EnumField(this, 100, value);
};


/**
 * map<string, string> params = 101;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.marsproto.Acknowledge.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 101, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.marsproto.Acknowledge} returns this
 */
proto.marsproto.Acknowledge.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.marsproto.ActionRequest.oneofGroups_ = [[100,101,102]];

/**
 * @enum {number}
 */
proto.marsproto.ActionRequest.MessageCase = {
  MESSAGE_NOT_SET: 0,
  SELECT_CORPORATION: 100,
  SHOP_CARD: 101,
  DO_ACTION: 102
};

/**
 * @return {proto.marsproto.ActionRequest.MessageCase}
 */
proto.marsproto.ActionRequest.prototype.getMessageCase = function() {
  return /** @type {proto.marsproto.ActionRequest.MessageCase} */(jspb.Message.computeOneofCase(this, proto.marsproto.ActionRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.ActionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.ActionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.ActionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ActionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    player: jspb.Message.getFieldWithDefault(msg, 2, 0),
    selectCorporation: (f = msg.getSelectCorporation()) && server$action_pb.SelectCorporation.toObject(includeInstance, f),
    shopCard: (f = msg.getShopCard()) && server$action_pb.ShopCard.toObject(includeInstance, f),
    doAction: (f = msg.getDoAction()) && server$action_pb.DoAction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.ActionRequest}
 */
proto.marsproto.ActionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.ActionRequest;
  return proto.marsproto.ActionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.ActionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.ActionRequest}
 */
proto.marsproto.ActionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayer(value);
      break;
    case 100:
      var value = new server$action_pb.SelectCorporation;
      reader.readMessage(value,server$action_pb.SelectCorporation.deserializeBinaryFromReader);
      msg.setSelectCorporation(value);
      break;
    case 101:
      var value = new server$action_pb.ShopCard;
      reader.readMessage(value,server$action_pb.ShopCard.deserializeBinaryFromReader);
      msg.setShopCard(value);
      break;
    case 102:
      var value = new server$action_pb.DoAction;
      reader.readMessage(value,server$action_pb.DoAction.deserializeBinaryFromReader);
      msg.setDoAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.ActionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.ActionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.ActionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ActionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getSelectCorporation();
  if (f != null) {
    writer.writeMessage(
      100,
      f,
      server$action_pb.SelectCorporation.serializeBinaryToWriter
    );
  }
  f = message.getShopCard();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      server$action_pb.ShopCard.serializeBinaryToWriter
    );
  }
  f = message.getDoAction();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      server$action_pb.DoAction.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.marsproto.ActionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ActionRequest} returns this
 */
proto.marsproto.ActionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player = 2;
 * @return {number}
 */
proto.marsproto.ActionRequest.prototype.getPlayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ActionRequest} returns this
 */
proto.marsproto.ActionRequest.prototype.setPlayer = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SelectCorporation select_corporation = 100;
 * @return {?proto.marsproto.SelectCorporation}
 */
proto.marsproto.ActionRequest.prototype.getSelectCorporation = function() {
  return /** @type{?proto.marsproto.SelectCorporation} */ (
    jspb.Message.getWrapperField(this, server$action_pb.SelectCorporation, 100));
};


/**
 * @param {?proto.marsproto.SelectCorporation|undefined} value
 * @return {!proto.marsproto.ActionRequest} returns this
*/
proto.marsproto.ActionRequest.prototype.setSelectCorporation = function(value) {
  return jspb.Message.setOneofWrapperField(this, 100, proto.marsproto.ActionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ActionRequest} returns this
 */
proto.marsproto.ActionRequest.prototype.clearSelectCorporation = function() {
  return this.setSelectCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ActionRequest.prototype.hasSelectCorporation = function() {
  return jspb.Message.getField(this, 100) != null;
};


/**
 * optional ShopCard shop_card = 101;
 * @return {?proto.marsproto.ShopCard}
 */
proto.marsproto.ActionRequest.prototype.getShopCard = function() {
  return /** @type{?proto.marsproto.ShopCard} */ (
    jspb.Message.getWrapperField(this, server$action_pb.ShopCard, 101));
};


/**
 * @param {?proto.marsproto.ShopCard|undefined} value
 * @return {!proto.marsproto.ActionRequest} returns this
*/
proto.marsproto.ActionRequest.prototype.setShopCard = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.marsproto.ActionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ActionRequest} returns this
 */
proto.marsproto.ActionRequest.prototype.clearShopCard = function() {
  return this.setShopCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ActionRequest.prototype.hasShopCard = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional DoAction do_action = 102;
 * @return {?proto.marsproto.DoAction}
 */
proto.marsproto.ActionRequest.prototype.getDoAction = function() {
  return /** @type{?proto.marsproto.DoAction} */ (
    jspb.Message.getWrapperField(this, server$action_pb.DoAction, 102));
};


/**
 * @param {?proto.marsproto.DoAction|undefined} value
 * @return {!proto.marsproto.ActionRequest} returns this
*/
proto.marsproto.ActionRequest.prototype.setDoAction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.marsproto.ActionRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ActionRequest} returns this
 */
proto.marsproto.ActionRequest.prototype.clearDoAction = function() {
  return this.setDoAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ActionRequest.prototype.hasDoAction = function() {
  return jspb.Message.getField(this, 102) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.marsproto.ReadResponse.repeatedFields_ = [100];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.ReadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.ReadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.ReadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ReadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    player: jspb.Message.getFieldWithDefault(msg, 2, 0),
    numPlayer: jspb.Message.getFieldWithDefault(msg, 3, 0),
    discardedDeck: jspb.Message.getFieldWithDefault(msg, 4, 0),
    drawDeck: jspb.Message.getFieldWithDefault(msg, 5, 0),
    generation: jspb.Message.getFieldWithDefault(msg, 6, 0),
    playersList: jspb.Message.toObjectList(msg.getPlayersList(),
    proto.marsproto.ReadResponse.Player.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.ReadResponse}
 */
proto.marsproto.ReadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.ReadResponse;
  return proto.marsproto.ReadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.ReadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.ReadResponse}
 */
proto.marsproto.ReadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPlayer(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumPlayer(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDiscardedDeck(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDrawDeck(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setGeneration(value);
      break;
    case 100:
      var value = new proto.marsproto.ReadResponse.Player;
      reader.readMessage(value,proto.marsproto.ReadResponse.Player.deserializeBinaryFromReader);
      msg.addPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.ReadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.ReadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.ReadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ReadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getNumPlayer();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getDiscardedDeck();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDrawDeck();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getGeneration();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      100,
      f,
      proto.marsproto.ReadResponse.Player.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.marsproto.ReadResponse.Player.repeatedFields_ = [3,4,5,6,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.ReadResponse.Player.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.ReadResponse.Player.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.ReadResponse.Player} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ReadResponse.Player.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    corporation: (f = msg.getCorporation()) && entity_pb.Card.toObject(includeInstance, f),
    resourcesList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    productionList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    handList: jspb.Message.toObjectList(msg.getHandList(),
    entity_pb.Card.toObject, includeInstance),
    playedList: jspb.Message.toObjectList(msg.getPlayedList(),
    entity_pb.Card.toObject, includeInstance),
    handCount: jspb.Message.getFieldWithDefault(msg, 7, 0),
    tagsList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    terraformingLevel: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.ReadResponse.Player}
 */
proto.marsproto.ReadResponse.Player.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.ReadResponse.Player;
  return proto.marsproto.ReadResponse.Player.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.ReadResponse.Player} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.ReadResponse.Player}
 */
proto.marsproto.ReadResponse.Player.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = new entity_pb.Card;
      reader.readMessage(value,entity_pb.Card.deserializeBinaryFromReader);
      msg.setCorporation(value);
      break;
    case 3:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setResourcesList(value);
      break;
    case 4:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setProductionList(value);
      break;
    case 5:
      var value = new entity_pb.Card;
      reader.readMessage(value,entity_pb.Card.deserializeBinaryFromReader);
      msg.addHand(value);
      break;
    case 6:
      var value = new entity_pb.Card;
      reader.readMessage(value,entity_pb.Card.deserializeBinaryFromReader);
      msg.addPlayed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setHandCount(value);
      break;
    case 8:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setTagsList(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTerraformingLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.ReadResponse.Player.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.ReadResponse.Player.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.ReadResponse.Player} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.ReadResponse.Player.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCorporation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      entity_pb.Card.serializeBinaryToWriter
    );
  }
  f = message.getResourcesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
  f = message.getProductionList();
  if (f.length > 0) {
    writer.writePackedInt32(
      4,
      f
    );
  }
  f = message.getHandList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      entity_pb.Card.serializeBinaryToWriter
    );
  }
  f = message.getPlayedList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      entity_pb.Card.serializeBinaryToWriter
    );
  }
  f = message.getHandCount();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writePackedInt32(
      8,
      f
    );
  }
  f = message.getTerraformingLevel();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.marsproto.ReadResponse.Player.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Card corporation = 2;
 * @return {?proto.marsproto.Card}
 */
proto.marsproto.ReadResponse.Player.prototype.getCorporation = function() {
  return /** @type{?proto.marsproto.Card} */ (
    jspb.Message.getWrapperField(this, entity_pb.Card, 2));
};


/**
 * @param {?proto.marsproto.Card|undefined} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
*/
proto.marsproto.ReadResponse.Player.prototype.setCorporation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearCorporation = function() {
  return this.setCorporation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.marsproto.ReadResponse.Player.prototype.hasCorporation = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated int32 resources = 3;
 * @return {!Array<number>}
 */
proto.marsproto.ReadResponse.Player.prototype.getResourcesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setResourcesList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.addResources = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearResourcesList = function() {
  return this.setResourcesList([]);
};


/**
 * repeated int32 production = 4;
 * @return {!Array<number>}
 */
proto.marsproto.ReadResponse.Player.prototype.getProductionList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setProductionList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.addProduction = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearProductionList = function() {
  return this.setProductionList([]);
};


/**
 * repeated Card hand = 5;
 * @return {!Array<!proto.marsproto.Card>}
 */
proto.marsproto.ReadResponse.Player.prototype.getHandList = function() {
  return /** @type{!Array<!proto.marsproto.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, entity_pb.Card, 5));
};


/**
 * @param {!Array<!proto.marsproto.Card>} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
*/
proto.marsproto.ReadResponse.Player.prototype.setHandList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.marsproto.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.marsproto.Card}
 */
proto.marsproto.ReadResponse.Player.prototype.addHand = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.marsproto.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearHandList = function() {
  return this.setHandList([]);
};


/**
 * repeated Card played = 6;
 * @return {!Array<!proto.marsproto.Card>}
 */
proto.marsproto.ReadResponse.Player.prototype.getPlayedList = function() {
  return /** @type{!Array<!proto.marsproto.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, entity_pb.Card, 6));
};


/**
 * @param {!Array<!proto.marsproto.Card>} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
*/
proto.marsproto.ReadResponse.Player.prototype.setPlayedList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.marsproto.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.marsproto.Card}
 */
proto.marsproto.ReadResponse.Player.prototype.addPlayed = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.marsproto.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearPlayedList = function() {
  return this.setPlayedList([]);
};


/**
 * optional int32 hand_count = 7;
 * @return {number}
 */
proto.marsproto.ReadResponse.Player.prototype.getHandCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setHandCount = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated int32 tags = 8;
 * @return {!Array<number>}
 */
proto.marsproto.ReadResponse.Player.prototype.getTagsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setTagsList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.addTags = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.clearTagsList = function() {
  return this.setTagsList([]);
};


/**
 * optional int32 terraforming_level = 9;
 * @return {number}
 */
proto.marsproto.ReadResponse.Player.prototype.getTerraformingLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse.Player} returns this
 */
proto.marsproto.ReadResponse.Player.prototype.setTerraformingLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 player = 2;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getPlayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setPlayer = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 num_player = 3;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getNumPlayer = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setNumPlayer = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 discarded_deck = 4;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getDiscardedDeck = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setDiscardedDeck = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 draw_deck = 5;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getDrawDeck = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setDrawDeck = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 generation = 6;
 * @return {number}
 */
proto.marsproto.ReadResponse.prototype.getGeneration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.setGeneration = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated Player players = 100;
 * @return {!Array<!proto.marsproto.ReadResponse.Player>}
 */
proto.marsproto.ReadResponse.prototype.getPlayersList = function() {
  return /** @type{!Array<!proto.marsproto.ReadResponse.Player>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.marsproto.ReadResponse.Player, 100));
};


/**
 * @param {!Array<!proto.marsproto.ReadResponse.Player>} value
 * @return {!proto.marsproto.ReadResponse} returns this
*/
proto.marsproto.ReadResponse.prototype.setPlayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 100, value);
};


/**
 * @param {!proto.marsproto.ReadResponse.Player=} opt_value
 * @param {number=} opt_index
 * @return {!proto.marsproto.ReadResponse.Player}
 */
proto.marsproto.ReadResponse.prototype.addPlayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 100, opt_value, proto.marsproto.ReadResponse.Player, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.marsproto.ReadResponse} returns this
 */
proto.marsproto.ReadResponse.prototype.clearPlayersList = function() {
  return this.setPlayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.marsproto.Announce.prototype.toObject = function(opt_includeInstance) {
  return proto.marsproto.Announce.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.marsproto.Announce} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.Announce.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    target: jspb.Message.getFieldWithDefault(msg, 2, 0),
    resource: jspb.Message.getFieldWithDefault(msg, 3, 0),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.marsproto.Announce}
 */
proto.marsproto.Announce.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.marsproto.Announce;
  return proto.marsproto.Announce.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.marsproto.Announce} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.marsproto.Announce}
 */
proto.marsproto.Announce.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTarget(value);
      break;
    case 3:
      var value = /** @type {!proto.marsproto.Announce.Resource} */ (reader.readEnum());
      msg.setResource(value);
      break;
    case 4:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.marsproto.Announce.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.marsproto.Announce.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.marsproto.Announce} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.marsproto.Announce.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getTarget();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getResource();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(4, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * @enum {number}
 */
proto.marsproto.Announce.Resource = {
  NO_ACTION: 0,
  START_GAME: 1,
  ADD_CARD_OPPONENT: 2,
  ADD_CARD_SELF: 3,
  SHUFFLE_DECK: 4,
  SEEK_CARD: 5,
  APPLY_CORPORATION: 6,
  DISCARD_CARD: 7,
  ADD_RESOURCE: 8,
  RUN_ACTIVATABLE: 9,
  PROCEED_TURN: 10,
  CARD_BUY_PHASE: 11,
  GENERATION_BEGIN: 12,
  GENERATION_END: 13,
  PLAY_CARD: 14,
  RUN_BASIC_PROJECT: 15,
  ADD_PRODUCTION: 16
};

/**
 * optional int64 id = 1;
 * @return {number}
 */
proto.marsproto.Announce.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.Announce} returns this
 */
proto.marsproto.Announce.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 target = 2;
 * @return {number}
 */
proto.marsproto.Announce.prototype.getTarget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.marsproto.Announce} returns this
 */
proto.marsproto.Announce.prototype.setTarget = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Resource resource = 3;
 * @return {!proto.marsproto.Announce.Resource}
 */
proto.marsproto.Announce.prototype.getResource = function() {
  return /** @type {!proto.marsproto.Announce.Resource} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.marsproto.Announce.Resource} value
 * @return {!proto.marsproto.Announce} returns this
 */
proto.marsproto.Announce.prototype.setResource = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * map<string, string> params = 4;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.marsproto.Announce.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 4, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.marsproto.Announce} returns this
 */
proto.marsproto.Announce.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};


goog.object.extend(exports, proto.marsproto);
